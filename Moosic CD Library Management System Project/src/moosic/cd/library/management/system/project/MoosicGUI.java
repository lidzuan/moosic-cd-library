/**

* STIA1123(E) Programming 2
* Group Project
* 
* This program is an enhanced version of Lee Juan's Individual Assignment 1, providing a user-friendly
* graphical user interface (GUI) to manage a collection of CDs in the Moosic CD Library. The GUI is built
* using JFrame and offers various functionalities to interact with the CD Library.
* 
* Features:
* - Display, Add, Edit, Delete Function
* - Search Function: Users can search for CDs by their unique ID and perform editing or removal.
* - Unlimited CDs: Users can add an unlimited number of CDs to the library with relevant information.
* - Local File Storage: CD information is saved in a local text file, allowing data persistence between
*                       program runs, and automatically loading the library's latest information upon startup.
* - Real Time Display: The GUI always displays the latest information from the CD Library.
* - Exception Handling: The program provides helpful error messages in case of invalid inputs or any file-related
*                       issues, ensuring a smooth and user-friendly experience.
* 
* @author   Lee Juan (280027), Edwin Lim Wei Bin (281775)
* @version  1.0
* @since    2023-07-24
*/

package moosic.cd.library.management.system.project;

import java.time.Year;              //import Year class from .time package to obtain current year
import javax.swing.JOptionPane;

public class MoosicGUI extends javax.swing.JFrame {

    private CD cd;
    private CDLibraryOperations op;
    
    
    public MoosicGUI() {
        initComponents();
        op = new CDLibraryOperations();
        
        op.loadCDDataFromFile();        //load data from file on startup
        
        //set labels in panel under "Library Information"
        numOfCDLabel.setText(String.valueOf(op.getNumOfCD()));
        totalCDCopiesLabel.setText(String.valueOf(op.calculateTotalCDCopies()));
        averageUnitPriceLabel.setText(String.format("RM%.2f", op.calculateAverageUnitPrice()));
        totalValueLabel.setText(String.format("RM%.2f", op.calculateTotalCDValue()));
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        titleTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        artistTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        priceTF = new javax.swing.JTextField();
        genreTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        yearTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        categoryCB = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        quantityTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        idTF = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        addBTN = new javax.swing.JButton();
        searchBTN = new javax.swing.JButton();
        updateBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTA = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        displayBTN = new javax.swing.JButton();
        resetBTN = new javax.swing.JButton();
        exitBTN = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        numOfCDLabel = new javax.swing.JLabel();
        totalCDCopiesLabel = new javax.swing.JLabel();
        totalValueLabel = new javax.swing.JLabel();
        averageUnitPriceLabel = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Moosic CD Library Management System");

        jPanel1.setBackground(java.awt.Color.lightGray);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel3.setText("Title:");

        titleTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel4.setText("Artist:");

        artistTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel5.setText("Price:");

        priceTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        genreTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel7.setText("Genre:");

        jLabel8.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel8.setText("Release Year:");

        yearTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel9.setText("Category:");

        categoryCB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        categoryCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Album", "EP", "Single" }));

        jLabel10.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel10.setText("Quantity:");

        quantityTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel6.setText("ID:");

        idTF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idTF.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel15.setText("RM");

        addBTN.setBackground(new java.awt.Color(255, 255, 153));
        addBTN.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        addBTN.setText("Add");
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        searchBTN.setBackground(new java.awt.Color(255, 153, 0));
        searchBTN.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        searchBTN.setText("Search");
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        updateBTN.setBackground(new java.awt.Color(153, 255, 153));
        updateBTN.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        updateBTN.setText("Update");
        updateBTN.setEnabled(false);
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });

        deleteBTN.setBackground(new java.awt.Color(255, 102, 102));
        deleteBTN.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        deleteBTN.setText("Delete");
        deleteBTN.setEnabled(false);
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(artistTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genreTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yearTF, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(titleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(addBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteBTN)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(categoryCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(titleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(artistTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(genreTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(yearTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBTN)
                    .addComponent(searchBTN)
                    .addComponent(updateBTN)
                    .addComponent(deleteBTN))
                .addContainerGap())
        );

        outputTA.setEditable(false);
        outputTA.setBackground(new java.awt.Color(204, 204, 255));
        outputTA.setColumns(20);
        outputTA.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        outputTA.setRows(5);
        jScrollPane1.setViewportView(outputTA);

        jLabel1.setBackground(new java.awt.Color(0, 0, 51));
        jLabel1.setFont(new java.awt.Font("Candara", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Moosic CD Library Management System");

        jLabel2.setFont(new java.awt.Font("Candara", 1, 18)); // NOI18N
        jLabel2.setText("CD Information List");

        displayBTN.setBackground(new java.awt.Color(102, 102, 255));
        displayBTN.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        displayBTN.setText("Display All CD Info");
        displayBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBTNActionPerformed(evt);
            }
        });

        resetBTN.setBackground(new java.awt.Color(255, 204, 204));
        resetBTN.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        resetBTN.setText("Reset");
        resetBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBTNActionPerformed(evt);
            }
        });

        exitBTN.setBackground(new java.awt.Color(204, 0, 0));
        exitBTN.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        exitBTN.setText("EXIT");
        exitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBTNActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel11.setText("Number of CD:");

        jLabel12.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel12.setText("Total CD Copies:");

        jLabel13.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel13.setText("Total CD Value:");

        jLabel14.setFont(new java.awt.Font("Candara", 1, 14)); // NOI18N
        jLabel14.setText("Average CD Unit Price:");

        numOfCDLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        numOfCDLabel.setForeground(new java.awt.Color(0, 0, 204));
        numOfCDLabel.setText("jLabel16");

        totalCDCopiesLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        totalCDCopiesLabel.setForeground(new java.awt.Color(0, 0, 204));
        totalCDCopiesLabel.setText("jLabel16");

        totalValueLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        totalValueLabel.setForeground(new java.awt.Color(0, 0, 204));
        totalValueLabel.setText("jLabel16");

        averageUnitPriceLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        averageUnitPriceLabel.setForeground(new java.awt.Color(0, 0, 204));
        averageUnitPriceLabel.setText("jLabel16");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalCDCopiesLabel)
                    .addComponent(numOfCDLabel))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(averageUnitPriceLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(totalValueLabel)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(numOfCDLabel)
                    .addComponent(jLabel14)
                    .addComponent(averageUnitPriceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(totalCDCopiesLabel)
                    .addComponent(jLabel13)
                    .addComponent(totalValueLabel))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLabel16.setFont(new java.awt.Font("Candara", 1, 18)); // NOI18N
        jLabel16.setText("Library Information");

        jLabel20.setFont(new java.awt.Font("Candara", 1, 18)); // NOI18N
        jLabel20.setText("CD Information");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(resetBTN)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(displayBTN)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exitBTN))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetBTN)
                    .addComponent(displayBTN)
                    .addComponent(exitBTN))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        
        try {
            
            String category = String.valueOf(categoryCB.getSelectedItem());
            String title = titleTF.getText();
            String artist = artistTF.getText();
            String genre = genreTF.getText();
            String yearText = yearTF.getText();
            String priceText = priceTF.getText();
            String quantityText = quantityTF.getText();
                        
            //throw new exception for empty text fields
            if ((title.equals("")) || (artist.equals("")) || (genre.equals(""))
                    || (yearText.equals("")) || (priceText.equals("")) || (quantityText.equals("")))
                throw new Exception("Please enter all fields.");
            
            //potential statement with NumberFormatException
            int year = Integer.parseInt(yearText);
            double price = Double.parseDouble(priceText);
            int quantity = Integer.parseInt(quantityText);
            
            //throw new exception for invalid year, price, or quantity
            if ((year < 0) || (year > Year.now().getValue()))
                throw new Exception("Invalid year!");
            if (price <= 0.0)
                throw new Exception("Invalid price!");
            if (quantity <= 0)
                throw new Exception("Invalid quantity!");
            
            
            String id = op.generateRandomID();
            
            CD cd = new CD(id, category, title, artist, genre, year, price, quantity);   //instantiate new cd object with its attributes
            op.addCD(cd);
            
            JOptionPane.showMessageDialog(this, "CD added successfully.", "Success!", JOptionPane.INFORMATION_MESSAGE);
            
            categoryCB.setSelectedIndex(0);
            titleTF.setText("");
            artistTF.setText("");
            genreTF.setText("");
            yearTF.setText("");
            priceTF.setText("");
            quantityTF.setText("");
            outputTA.setText("");
            
            numOfCDLabel.setText(String.valueOf(op.getNumOfCD()));
            totalCDCopiesLabel.setText(String.valueOf(op.calculateTotalCDCopies()));
            averageUnitPriceLabel.setText(String.format("RM%.2f", op.calculateAverageUnitPrice()));
            totalValueLabel.setText(String.format("RM%.2f", op.calculateTotalCDValue()));
            
        }
        catch (NumberFormatException nfx) {
            JOptionPane.showMessageDialog(this,
                    "Invalid entry. Please enter digits for year, price, and quantity only.",
                   "Error!", JOptionPane.ERROR_MESSAGE);
        }
        catch (Exception x) {
            JOptionPane.showMessageDialog(this, x.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_addBTNActionPerformed

    
    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        
        if (op.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Unable to search for any CD.\nPlease add CD information.",
                    "CD Library is empty!", JOptionPane.INFORMATION_MESSAGE);
        }
        else {
            
            String id = JOptionPane.showInputDialog(this, "Insert CD ID:", "Search CD", JOptionPane.QUESTION_MESSAGE);
            
            String cdInfo = op.displayCD(id);
            
            if (cdInfo.equals("ID not found"))
                JOptionPane.showMessageDialog(this,
                        "Unable to search for CD ID: " + id + "\nPlease insert a valid CD ID.", "CD ID not found!", JOptionPane.ERROR_MESSAGE);
            
            else {
                outputTA.setText(cdInfo);
                JOptionPane.showMessageDialog(this,
                        "This CD info can now be viewed, edited or deleted.\n" +
                        "After editing the CD info in the respective input fields, remember to save by clicking the Update button.\n" +
                        "Or, click the Delete button to remove CD.",
                        "CD ID found!", JOptionPane.INFORMATION_MESSAGE);
                
                //extract the attributes from cdInfo
                String category = cdInfo.substring(cdInfo.indexOf("Category  : ") + 12, cdInfo.indexOf("\n--> Title"));
                String title = cdInfo.substring(cdInfo.indexOf("Title         : ") + 16, cdInfo.indexOf("\n--> Artist"));
                String artist = cdInfo.substring(cdInfo.indexOf("Artist       : ") + 15, cdInfo.indexOf("\n--> Genre"));
                String genre = cdInfo.substring(cdInfo.indexOf("Genre      : ") + 13, cdInfo.indexOf("\n--> Year"));
                String year = cdInfo.substring(cdInfo.indexOf("Year         : ") + 15, cdInfo.indexOf("\n--> Price"));
                String price = cdInfo.substring(cdInfo.indexOf("Price        : RM") + 17, cdInfo.indexOf("\n--> Quantity"));
                String quantity = cdInfo.substring(cdInfo.indexOf("Quantity  : ") + 12, cdInfo.indexOf("\n\no"));
                
                //set the extracted attributes to the respective combo box and text fields
                idTF.setText(id);
                categoryCB.setSelectedItem(category);
                titleTF.setText(title);
                artistTF.setText(artist);
                genreTF.setText(genre);
                yearTF.setText(year);
                priceTF.setText(price);
                quantityTF.setText(quantity);
                
                addBTN.setEnabled(false);
                updateBTN.setEnabled(true);
                deleteBTN.setEnabled(true);
            }
            
        } //end outer else
        
    }//GEN-LAST:event_searchBTNActionPerformed

    
    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
        
        //handle all the possible exceptions for user input
        try {
            
            int respond = JOptionPane.showConfirmDialog(this, "Are you sure to update this CD info?",
                "Update Info?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            
            if (respond == JOptionPane.YES_OPTION) {
                
                String id = idTF.getText();
                String category = String.valueOf(categoryCB.getSelectedItem());
                String title = titleTF.getText();
                String artist = artistTF.getText();
                String genre = genreTF.getText();
                String yearText = yearTF.getText();
                String priceText = priceTF.getText();
                String quantityText = quantityTF.getText();

                //throw new exception for empty text fields
                if ((title.equals("")) || (artist.equals("")) || (genre.equals(""))
                        || (yearText.equals("")) || (priceText.equals("")) || (quantityText.equals("")))
                    throw new Exception("Please enter all fields.");

                //potential statement with NumberFormatException
                int year = Integer.parseInt(yearText);
                double price = Double.parseDouble(priceText);
                int quantity = Integer.parseInt(quantityText);

                //throw new exception for invalid year, price, or quantity
                if ((year <= 0) || (year > Year.now().getValue()))
                    throw new Exception("Invalid year!");
                if (price <= 0.0)
                    throw new Exception("Invalid price!");
                if (quantity <= 0)
                    throw new Exception("Invalid quantity!");
                
                CD updatedCD = new CD(id, category, title, artist, genre, year, price, quantity);
                op.updateCD(updatedCD);

                JOptionPane.showMessageDialog(this, "CD with ID \"" + id + "\" updated successfully.",
                        "Success!", JOptionPane.INFORMATION_MESSAGE);
                
                idTF.setText("");
                categoryCB.setSelectedIndex(0);
                titleTF.setText("");
                artistTF.setText("");
                genreTF.setText("");
                yearTF.setText("");
                priceTF.setText("");
                quantityTF.setText("");
                outputTA.setText("");
                
                addBTN.setEnabled(true);
                updateBTN.setEnabled(false);
                deleteBTN.setEnabled(false);
                
                numOfCDLabel.setText(String.valueOf(op.getNumOfCD()));
                totalCDCopiesLabel.setText(String.valueOf(op.calculateTotalCDCopies()));
                averageUnitPriceLabel.setText(String.format("RM%.2f", op.calculateAverageUnitPrice()));
                totalValueLabel.setText(String.format("RM%.2f", op.calculateTotalCDValue()));
                
            }//end if
            
        }
        catch (NumberFormatException nfx) {
            JOptionPane.showMessageDialog(this,
                    "Invalid entry. Please enter digits for year, price, and quantity only.",
                   "Error!", JOptionPane.ERROR_MESSAGE);
        }
        catch (Exception x) {
            JOptionPane.showMessageDialog(this, x.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_updateBTNActionPerformed

    
    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
        
        int respond = JOptionPane.showConfirmDialog(this, "Are you sure to delete this CD and its info?\nThis cannot be undone.",
                "Delete CD?", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            
        if (respond == JOptionPane.YES_OPTION) {
            
            String deleteID = idTF.getText();
            op.deleteCD(deleteID);
            
            JOptionPane.showMessageDialog(this, "CD with ID \"" + deleteID + "\" deleted successfully.",
                        "Success!", JOptionPane.INFORMATION_MESSAGE);
            
            idTF.setText("");
            categoryCB.setSelectedIndex(0);
            titleTF.setText("");
            artistTF.setText("");
            genreTF.setText("");
            yearTF.setText("");
            priceTF.setText("");
            quantityTF.setText("");
            outputTA.setText("");
            
            addBTN.setEnabled(true);
            updateBTN.setEnabled(false);
            deleteBTN.setEnabled(false);
            
            numOfCDLabel.setText(String.valueOf(op.getNumOfCD()));
            totalCDCopiesLabel.setText(String.valueOf(op.calculateTotalCDCopies()));
            averageUnitPriceLabel.setText(String.format("RM%.2f", op.calculateAverageUnitPrice()));
            totalValueLabel.setText(String.format("RM%.2f", op.calculateTotalCDValue()));
            
        }
        
    }//GEN-LAST:event_deleteBTNActionPerformed

    
    private void displayBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBTNActionPerformed
        
        if (op.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "There is nothing to display.\nPlease add CD information.",
                    "CD Library is empty!", JOptionPane.INFORMATION_MESSAGE);
        }
        else {
            String output = op.displayCD();
            outputTA.setText(output);
            
            idTF.setText("");
            categoryCB.setSelectedIndex(0);
            titleTF.setText("");
            artistTF.setText("");
            genreTF.setText("");
            yearTF.setText("");
            priceTF.setText("");
            quantityTF.setText("");
            
            addBTN.setEnabled(true);
            updateBTN.setEnabled(false);
            deleteBTN.setEnabled(false);
        }
        
    }//GEN-LAST:event_displayBTNActionPerformed

    
    private void resetBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBTNActionPerformed
        
        int respond = JOptionPane.showConfirmDialog(this, "Are you sure to reset the information list as well as all input fields?",
                "Reset?", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if (respond == JOptionPane.YES_OPTION) {
            idTF.setText("");
            categoryCB.setSelectedIndex(0);
            titleTF.setText("");
            artistTF.setText("");
            genreTF.setText("");
            yearTF.setText("");
            priceTF.setText("");
            quantityTF.setText("");
            outputTA.setText("");

            addBTN.setEnabled(true);
            updateBTN.setEnabled(false);
            deleteBTN.setEnabled(false);
        }
        
    }//GEN-LAST:event_resetBTNActionPerformed

    
    private void exitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBTNActionPerformed
        
        int respond = JOptionPane.showConfirmDialog(this, "Are you sure to exit?",
                "Exit?", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if (respond == JOptionPane.YES_OPTION)
            System.exit(0);
        
    }//GEN-LAST:event_exitBTNActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MoosicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MoosicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MoosicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MoosicGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoosicGUI().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBTN;
    private javax.swing.JTextField artistTF;
    private javax.swing.JLabel averageUnitPriceLabel;
    private javax.swing.JComboBox<String> categoryCB;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JButton displayBTN;
    private javax.swing.JButton exitBTN;
    private javax.swing.JTextField genreTF;
    private javax.swing.JTextField idTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel numOfCDLabel;
    private javax.swing.JTextArea outputTA;
    private javax.swing.JTextField priceTF;
    private javax.swing.JTextField quantityTF;
    private javax.swing.JButton resetBTN;
    private javax.swing.JButton searchBTN;
    private javax.swing.JTextField titleTF;
    private javax.swing.JLabel totalCDCopiesLabel;
    private javax.swing.JLabel totalValueLabel;
    private javax.swing.JButton updateBTN;
    private javax.swing.JTextField yearTF;
    // End of variables declaration//GEN-END:variables
}
